---
name: Build, Test, and Install

'on':
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    container:
      image: opencog/opencog-deps
      options: --user root

    steps:
      - name: Mark repo as safe for git
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false

      - name: Install additional dependencies
        run: |
          apt-get update
          apt-get install -y build-essential cmake libboost-all-dev valgrind doxygen

      - name: Configure CMake
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: |
          cd build
          make -j$(nproc)

      - name: Build tests
        run: |
          cd build
          make tests || true

      - name: Run tests
        run: |
          cd build
          make test ARGS="-V" || true

      - name: Print test log if exists
        if: always()
        run: |
          if [ -f build/tests/Testing/Temporary/LastTest.log ]; then
            cat build/tests/Testing/Temporary/LastTest.log
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build
          retention-days: 1

  install-and-package:
    runs-on: ubuntu-latest
    needs: build-and-test
    container:
      image: opencog/opencog-deps
      options: --user root

    steps:
      - name: Mark repo as safe for git
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Install
        run: |
          cd build
          make install

      - name: Build Debian package
        run: |
          cd build
          make package || echo "Package target not available"

      - name: Store packages
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: packages
          path: build/packages/
          if-no-files-found: ignore
